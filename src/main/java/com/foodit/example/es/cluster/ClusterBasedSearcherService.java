package com.foodit.example.es.cluster;import com.foodit.example.es.SearcherService;import com.foodit.example.util.Properties;import org.elasticsearch.action.search.SearchRequestBuilder;import org.elasticsearch.action.search.SearchResponse;import org.elasticsearch.client.Client;import org.elasticsearch.client.transport.TransportClient;import org.elasticsearch.common.settings.ImmutableSettings;import org.elasticsearch.common.settings.Settings;import org.elasticsearch.common.transport.InetSocketTransportAddress;import org.elasticsearch.index.query.QueryBuilder;import org.elasticsearch.index.query.QueryBuilders;import org.elasticsearch.search.sort.SortBuilders;public class ClusterBasedSearcherService implements SearcherService {    private Settings settings = ImmutableSettings.settingsBuilder()            .put("cluster.name", "elasticsearch")            .build();    private Client client = new TransportClient(settings)            .addTransportAddress(new InetSocketTransportAddress("localhost", 9300));    public String searchByQueryString(String query, int from, int resultsSize) {        QueryBuilder queryBuilder = QueryBuilders.boolQuery()                .must(QueryBuilders.queryStringQuery(query).field(Properties.SEARCH_FIELD_NAME));        SearchResponse searchResponse = client.prepareSearch(Properties.INDEX_NAME)                .setTypes(Properties.TYPE_NAME)                .setQuery(queryBuilder)                .setFrom(from)                .setSize(resultsSize)                .execute()                .actionGet();        return searchResponse.toString();    }}